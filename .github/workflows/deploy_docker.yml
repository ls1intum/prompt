name: Deploy Docker Image

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
  workflow_run:
    workflows: ["Build Docker Image"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: build
    steps:
      # - name: SSH to VM and Execute Docker-Compose Down
      #   uses: appleboy/ssh-action@v0.1.10
      #   with:
      #     host: ${{ vars.VM_HOST }}
      #     username: ${{ vars.VM_USERNAME }}
      #     key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_host: ${{ vars.PROXY_HOST }}
      #     proxy_username: ${{ vars.PROXY_USERNAME }}
      #     proxy_key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_port: ${{ vars.PROXY_PORT }}
      #     script: |
      #       docker compose -f docker-compose.prod.yml --env-file=.env.prod down --remove-orphans --rmi all

      - name: checkout
        uses: actions/checkout@v3

      # - name: 'Create main.cf and master.cf file'
      #   run: |
      #     echo "${{ vars.POSTFIX_MAIN_CF }}" > main.cf
      #     echo "${{ vars.POSTFIX_MASTER_CF }}" > master.cf

      # - name: Copy Docker Compose File From Repo to VM Host
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: ${{ vars.VM_HOST }}
      #     username: ${{ vars.VM_USERNAME }}
      #     key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_host: ${{ vars.PROXY_HOST }}
      #     proxy_username: ${{ vars.PROXY_USERNAME }}
      #     proxy_key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_port: ${{ vars.PROXY_PORT }}
      #     source: "./docker-compose.prod.yml"
      #     target: /home/${{ vars.VM_USERNAME }}

      # - name: Copy main.cf to VM Host
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: ${{ vars.VM_HOST }}
      #     username: ${{ vars.VM_USERNAME }}
      #     key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_host: ${{ vars.PROXY_HOST }}
      #     proxy_username: ${{ vars.PROXY_USERNAME }}
      #     proxy_key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_port: ${{ vars.PROXY_PORT }}
      #     source: "main.cf"
      #     target: /home/${{ vars.VM_USERNAME }}/postfix-config/

      # - name: Copy master.cf to VM Host
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: ${{ vars.VM_HOST }}
      #     username: ${{ vars.VM_USERNAME }}
      #     key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_host: ${{ vars.PROXY_HOST }}
      #     proxy_username: ${{ vars.PROXY_USERNAME }}
      #     proxy_key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_port: ${{ vars.PROXY_PORT }}
      #     source: "master.cf"
      #     target: /home/${{ vars.VM_USERNAME }}/postfix-config/

      - name: Use Computed Tag
        run: echo "The computed tag is ${{ needs.build.outputs.image_tag }}"

      # - name: SSH to VM and create .env.prod file
      #   uses: appleboy/ssh-action@v0.1.10
      #   env:
      #     IMAGE_TAG: ${{ needs.build.outputs.image_tag }}
      #   with:
      #     host: ${{ vars.VM_HOST }}
      #     username: ${{ vars.VM_USERNAME }}
      #     key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_host: ${{ vars.PROXY_HOST }}
      #     proxy_username: ${{ vars.PROXY_USERNAME }}
      #     proxy_key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_port: ${{ vars.PROXY_PORT }}
      #     script: |
      #       touch .env.prod            
      #       echo "ATLASSIAN_USERNAME=${{ vars.ATLASSIAN_USERNAME }}" > .env.prod
      #       echo "ATLASSIAN_PASSWORD=${{ secrets.ATLASSIAN_PASSWORD }}" >> .env.prod
      #       echo "JIRA_URL=${{ vars.JIRA_URL }}" >> .env.prod
      #       echo "BITBUCKET_URL=${{ vars.BITBUCKET_URL }}" >> .env.prod
      #       echo "BAMBOO_URL=${{ vars.BAMBOO_URL }}" >> .env.prod
      #       echo "CONFLUENCE_URL=${{ vars.CONFLUENCE_URL }}" >> .env.prod

      #       echo "SPRING_DATASOURCE_URL=${{ vars.SPRING_DATASOURCE_URL }}" >> .env.prod
      #       echo "SPRING_DATASOURCE_USERNAME=${{ vars.SPRING_DATASOURCE_USERNAME }}" >> .env.prod
      #       echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> .env.prod

      #       echo "SERVER_HOST=${{ vars.SERVER_HOST }}" >> .env.prod
      #       echo "CLIENT_HOST=${{ vars.CLIENT_HOST }}" >> .env.prod

      #       echo "KEYCLOAK_HOST=${{ vars.KEYCLOAK_HOST }}" >> .env.prod
      #       echo "KEYCLOAK_ISSUER_URI=${{ vars.KEYCLOAK_HOST }}/realms/${{ vars.KEYCLOAK_REALM_NAME }}" >> .env.prod
      #       echo "KEYCLOAK_JWK_SET_URI=${{ vars.KEYCLOAK_HOST }}/realms/${{ vars.KEYCLOAK_REALM_NAME }}/protocol/openid-connect/certs" >> .env.prod
      #       echo "KEYCLOAK_CLIENT_SECRET=${{ secrets.KEYCLOAK_CLIENT_SECRET }}" >> .env.prod
      #       echo "IOS_SENDER_MAIL=${{ vars.IOS_SENDER_MAIL }}" >> .env.prod

      #       echo "IMAGE_TAG=${{ env.IMAGE_TAG }}" >> .env.prod

      # - name: SSH to VM and Execute Docker-Compose Up
      #   uses: appleboy/ssh-action@v0.1.10
      #   with:
      #     host: ${{ vars.VM_HOST }}
      #     username: ${{ vars.VM_USERNAME }}
      #     key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_host: ${{ vars.PROXY_HOST }}
      #     proxy_username: ${{ vars.PROXY_USERNAME }}
      #     proxy_key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
      #     proxy_port: ${{ vars.PROXY_PORT }}
      #     script: |
      #       docker compose -f docker-compose.prod.yml --env-file=.env.prod up --pull=always -d
